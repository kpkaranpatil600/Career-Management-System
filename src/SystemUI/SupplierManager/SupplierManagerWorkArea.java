/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package SystemUI.SupplierManager;
import SystemModel.Supplier.Supplier;
import SystemModel.Supplier.Supply;
import SystemModel.EcoSystem;
import SystemModel.EnterpriseManagement.Enterprise;
import SystemModel.Organization.SupplierOrganization;
import SystemModel.Organization.Organization;
import SystemModel.UserAccount.UserAccount;
import SystemModel.WorkFlow.SponsorWorkReqest;
import SystemModel.WorkFlow.GCOSupplyWorkRequest ;
import SystemModel.WorkFlow.WorkRequestList;
import SystemModel.WorkFlow.WorkRequest;
//import com.sun.glass.events.KeyEvent;
import java.awt.event.KeyEvent;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
/**
 *
 * @author Karan
 */
public class SupplierManagerWorkArea extends javax.swing.JPanel {
    private JPanel workArea;
    private UserAccount UserAccount;
    private Organization org;
    private Enterprise enterprise;
    private EcoSystem ESystem;
    private Supplier s;
    /**
     * Creates new form SupplierManagerWorkArea
     */
    public SupplierManagerWorkArea(JPanel workArea, UserAccount UserAccount,Organization org,Enterprise enterprise,EcoSystem ESystem) {
        initComponents();
        this.workArea=workArea;
        this.UserAccount=UserAccount;
        this.org=org;
        this.enterprise=enterprise;
        this.ESystem=ESystem;
        completeBtn.setEnabled(false);
        
        
        populateSupplyTable();
        populateCreateTable();
      
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        supplierRequestJTable = new javax.swing.JTable();
        comboReqType = new javax.swing.JComboBox<>();
        assignBtn = new javax.swing.JButton();
        completeBtn = new javax.swing.JButton();
        addBtn = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        reqTxt = new javax.swing.JTextField();
        qtyTxt = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        createJTable = new javax.swing.JTable();
        lblCheckReq = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(java.awt.Color.cyan);

        jLabel1.setFont(new java.awt.Font("Georgia", 1, 24)); // NOI18N
        jLabel1.setText("Supplier Dashboard");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(401, 401, 401)
                .addComponent(jLabel1)
                .addContainerGap(550, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(jLabel1)
                .addGap(26, 26, 26))
        );

        add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1200, -1));

        supplierRequestJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Request Type", "Requirements", "Quantity", "Status", "Source"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, true, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(supplierRequestJTable);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 110, 880, 130));

        comboReqType.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "None", "Technical_Lab", "Workstation_PC", "Softwares", "Empty_Labs", "Labs_Assistance" }));
        add(comboReqType, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 360, 213, -1));

        assignBtn.setBackground(java.awt.Color.gray);
        assignBtn.setFont(new java.awt.Font("Georgia", 1, 14)); // NOI18N
        assignBtn.setText("Assign");
        assignBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                assignBtnActionPerformed(evt);
            }
        });
        add(assignBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 270, 145, 35));

        completeBtn.setBackground(java.awt.Color.gray);
        completeBtn.setFont(new java.awt.Font("Georgia", 1, 14)); // NOI18N
        completeBtn.setText("Complete");
        completeBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                completeBtnActionPerformed(evt);
            }
        });
        add(completeBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 270, 155, 33));

        addBtn.setBackground(java.awt.Color.gray);
        addBtn.setFont(new java.awt.Font("Georgia", 1, 14)); // NOI18N
        addBtn.setText("Request to Sponors");
        addBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addBtnActionPerformed(evt);
            }
        });
        add(addBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 490, 180, -1));

        jLabel2.setFont(new java.awt.Font("Georgia", 1, 14)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel2.setText("Requirement : ");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 400, -1, -1));

        reqTxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                reqTxtKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                reqTxtKeyTyped(evt);
            }
        });
        add(reqTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 400, 213, -1));

        qtyTxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                qtyTxtKeyTyped(evt);
            }
        });
        add(qtyTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 440, 213, -1));

        jLabel3.setFont(new java.awt.Font("Georgia", 1, 14)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel3.setText("Quantity :");
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 440, -1, -1));

        jLabel5.setFont(new java.awt.Font("Georgia", 1, 14)); // NOI18N
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel5.setText("Request Type : ");
        add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 360, -1, -1));

        jLabel4.setFont(new java.awt.Font("Georgia", 1, 14)); // NOI18N
        jLabel4.setText("Availability: ");
        add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(830, 310, -1, -1));

        createJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Request Type", "Requirement", "Quantity", "Status", "Sponsor"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, true, false, false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(createJTable);

        add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 340, 401, 215));
        add(lblCheckReq, new org.netbeans.lib.awtextra.AbsoluteConstraints(43, 370, 210, 20));
    }// </editor-fold>//GEN-END:initComponents

    private void assignBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_assignBtnActionPerformed
        int selectedRow = supplierRequestJTable.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "Please select the row to assign the account", "Warning", JOptionPane.WARNING_MESSAGE);
        } else {

            GCOSupplyWorkRequest nswr = (GCOSupplyWorkRequest) supplierRequestJTable.getValueAt(selectedRow, 3);

            nswr.setStatus("Pending");
            nswr.setReciever(UserAccount);

            populateSupplyTable();
            completeBtn.setEnabled(true);

        }

    }//GEN-LAST:event_assignBtnActionPerformed

    private void completeBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_completeBtnActionPerformed

        int selectedRow = supplierRequestJTable.getSelectedRow();
        int selectedRow1 = createJTable.getSelectedRow();

        GCOSupplyWorkRequest p = (GCOSupplyWorkRequest) supplierRequestJTable.getValueAt(selectedRow, 3);
        SponsorWorkReqest d = (SponsorWorkReqest) createJTable.getValueAt(selectedRow1, 3);

        if (p.getReqType().equals(d.getRequestType()) && (p.getRequest().equals(d.getRequirements()) && (p.getQuantity() <= d.getQuantity())) && (d.getStatus().equalsIgnoreCase("Completed & Available in Stock"))) {
            int diff = d.getQuantity() - p.getQuantity();
            d.setQuantity(diff);
            p.setStatus("Complete");
        } else {

            JOptionPane.showMessageDialog(null, "Please", "Warning", JOptionPane.WARNING_MESSAGE);
        }

        populateSupplyTable();
        populateCreateTable();
        completeBtn.setEnabled(false);

        

    }//GEN-LAST:event_completeBtnActionPerformed

    private void addBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addBtnActionPerformed
        String type = comboReqType.getSelectedItem().toString();
        String req = reqTxt.getText();
        int quantity = Integer.parseInt(qtyTxt.getText());

        if(req.equals("") || req.isEmpty())

        {
            JOptionPane.showMessageDialog(null, "Please create requirement");
            return;
        }

        SponsorWorkReqest request = new SponsorWorkReqest();
        request.setRequestType(type);
        request.setRequirements(req);
        request.setQuantity(quantity);
        request.setStatus("Requested To Donors");

        //request.setStatus("Requested");request.setSender(account);
        org.getWorkRequestList().getWorkRequestList().add(request);
        UserAccount.getWorkQueue().getWorkRequestList().add(request);
        ESystem.getWorkRequestList().getWorkRequestList().add(request);
        populateCreateTable();
        reqTxt.setText("");
        qtyTxt.setText("");

    }//GEN-LAST:event_addBtnActionPerformed

    private void reqTxtKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_reqTxtKeyTyped
        /*char c= evt.getKeyChar();
        if(!(Character.isAlphabetic(c)) || (c==KeyEvent.VK_DELETE) || (c==KeyEvent.VK_BACK_SPACE))
        {
            evt.consume();
        }*/
    }//GEN-LAST:event_reqTxtKeyTyped

    private void qtyTxtKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_qtyTxtKeyTyped
        char c= evt.getKeyChar();
        if(!(Character.isDigit(c)) || (c==KeyEvent.VK_DELETE) || (c==KeyEvent.VK_BACK_SPACE))
        {
            evt.consume();  
        }
    }//GEN-LAST:event_qtyTxtKeyTyped

    private void reqTxtKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_reqTxtKeyReleased
        // TODO add your handling code here:
        String validReq = "^[A-Za-z0-9\\s]{1,150}$";
        Pattern pattern = Pattern.compile(validReq);
        Matcher match = pattern.matcher(reqTxt.getText());

        if (!match.matches()) {
            lblCheckReq.setText("Please Enter Valid Requiments!!");

        } else {
            lblCheckReq.setText(null);

        }
        
    }//GEN-LAST:event_reqTxtKeyReleased


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addBtn;
    private javax.swing.JButton assignBtn;
    private javax.swing.JComboBox<String> comboReqType;
    private javax.swing.JButton completeBtn;
    private javax.swing.JTable createJTable;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JLabel lblCheckReq;
    private javax.swing.JTextField qtyTxt;
    private javax.swing.JTextField reqTxt;
    private javax.swing.JTable supplierRequestJTable;
    // End of variables declaration//GEN-END:variables

    private void populateSupplyTable() {
        DefaultTableModel model = (DefaultTableModel) supplierRequestJTable.getModel();

        model.setRowCount(0);
        if (ESystem.getWorkRequestList().getWorkRequestList().isEmpty()) {
            System.out.println("SystemUI.SupplierManager.SupplierManagerWorkArea.populateSupplyTable() is Empty!!!");
        } else {
            System.out.println(ESystem.getWorkRequestList().getWorkRequestList());
        }
        for (WorkRequest work : ESystem.getWorkRequestList().getWorkRequestList()) {
            if (work instanceof GCOSupplyWorkRequest) {
                Object[] row = new Object[5];
                
                row[0] = ((GCOSupplyWorkRequest) work).getReqType();
                row[1] = ((GCOSupplyWorkRequest) work).getRequest();
                row[2] = ((GCOSupplyWorkRequest) work).getQuantity();
                row[3] = work;
                row[4] = work.getSender();

                model.addRow(row);
            }
        } //To change body of generated methods, choose Tools | Templates.
    }

    private void populateCreateTable()
    {
        DefaultTableModel model = (DefaultTableModel) createJTable.getModel();

        model.setRowCount(0);

        for (WorkRequest work : org.getWorkRequestList().getWorkRequestList()) {
            if (work instanceof SponsorWorkReqest) {
                Object[] row = new Object[5];
                row[0] = ((SponsorWorkReqest) work).getRequestType();
                row[1] = ((SponsorWorkReqest) work).getRequirements();

                row[2] = ((SponsorWorkReqest) work).getQuantity();
                row[3] = work;
                row[4] = work.getReciever();

                model.addRow(row);
            }
        }
    }
    
}


